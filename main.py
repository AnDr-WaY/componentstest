import discord
from discord.ext import commands
import requests

intents = discord.Intents.all()
bot = commands.Bot(command_prefix="!", intents=intents)

def get_random_meme():
    response = requests.get("https://meme-api.com/gimme")
    return response.json()['url']

class TestButton(discord.ui.Button):
    async def callback(self, interaction: discord.Interaction):
        await interaction.response.defer()
        await self.view.container.update_meme()

class TestContainer(discord.ui.Container):
    def __init__(self):
        super().__init__(id=1)
        self.original_message = None
        self.layout = None
    
    # –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –æ–±—ä—è–≤–ª—è—é—Ç—Å—è –∫–∞–∫ –∞—Ç—Ä–∏–±—É—Ç—ã –∫–ª–∞—Å—Å–∞
    text1 = discord.ui.TextDisplay("# –†–∞–Ω–¥–æ–º–Ω—ã–π –º–µ–º", row=0)
    text2 = discord.ui.MediaGallery(discord.MediaGalleryItem(media=get_random_meme(), description="–ú–µ–º—á–∏–∫"), row=2)

    section = discord.ui.Section(
        accessory=TestButton(label="üé≤ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π")
    ).add_item(discord.ui.TextDisplay("–Ω–µ —Å–º–µ—à–Ω–æ? ü§î"))
    
    def set_original_message(self, message: discord.Message):
        self.original_message = message
    
    def set_layout(self, layout: discord.ui.LayoutView):
        self.layout = layout

    async def update_meme(self):
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π MediaGalleryItem —Å –Ω–æ–≤—ã–º –º–µ–º–æ–º
        new_meme_url = get_random_meme()
        new_item = discord.MediaGalleryItem(media=new_meme_url, description="–ú–µ–º—á–∏–∫")
        
        # –ó–∞–º–µ–Ω—è–µ–º –≤–µ—Å—å —Å–ø–∏—Å–æ–∫ items (–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–±)
        self.text2.items = [new_item]
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await self.original_message.edit(view=self.layout)

class TestView(discord.ui.LayoutView):
    container = TestContainer()

@bot.command(aliases=['meme'])
async def random_meme(ctx):
    view = TestView()
    view.container.set_layout(view)
    
    message = await ctx.send(view=view)
    view.container.set_original_message(message)

if __name__ == "__main__":
    import dotenv
    import os
    dotenv.load_dotenv()
    
    bot.run(os.getenv("BOT_TOKEN"))